

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 11:54:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  001E                     _ADRESH	set	30
   208  000B                     _INTCON	set	11
   209  000C                     _PIR1bits	set	12
   210  0008                     _PORTD	set	8
   211  0007                     _PORTC	set	7
   212  0006                     _PORTB	set	6
   213  0005                     _PORTA	set	5
   214  001F                     _ADCON0bits	set	31
   215  0081                     _OPTION_REG	set	129
   216  008C                     _PIE1bits	set	140
   217  008F                     _OSCCON	set	143
   218  0089                     _TRISE	set	137
   219  0088                     _TRISD	set	136
   220  0086                     _TRISB	set	134
   221  0085                     _TRISA	set	133
   222  009F                     _ADCON1	set	159
   223  0189                     _ANSELH	set	393
   224  0188                     _ANSEL	set	392
   225                           
   226                           	psect	cinit
   227  07F6                     start_initialization:	
   228                           ; #config settings
   229                           
   230  07F6                     __initialization:
   231                           
   232                           ; Clear objects allocated to COMMON
   233  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   234  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   235  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   236  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   237  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   238  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2FD0   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  0070                     __pbssCOMMON:
   248  0070                     _volt:
   249  0070                     	ds	4
   250  0074                     _result_adc:
   251  0074                     	ds	2
   252                           
   253                           	psect	cstackCOMMON
   254  0076                     __pcstackCOMMON:
   255  0076                     ?_CONFIG_IO:
   256  0076                     ??_CONFIG_IO:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0076                     ?_OSCILADOR:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0076                     ??_OSCILADOR:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0076                     ?_ADC_INTERRUPT:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0076                     ??_ADC_INTERRUPT:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0076                     ?_ADC:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0076                     ?_ADC_INIT:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0076                     ??_ADC_INIT:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0076                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0076                     ?_ADC_CHANNEL:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0076                     ADC_CHANNEL@canal:	
   287                           ; 2 bytes @ 0x0
   288                           
   289                           
   290                           ; 2 bytes @ 0x0
   291  0076                     	ds	2
   292  0078                     ??_ADC:
   293  0078                     ??_ADC_CHANNEL:	
   294                           ; 1 bytes @ 0x2
   295                           
   296                           
   297                           ; 1 bytes @ 0x2
   298  0078                     	ds	2
   299  007A                     ??_main:
   300                           
   301                           ; 1 bytes @ 0x4
   302  007A                     	ds	2
   303                           
   304                           	psect	maintext
   305  07D0                     __pmaintext:	
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 47 in file "POT_ADC.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : B00/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0
   327 ;;      Temps:          2       0       0       0       0
   328 ;;      Totals:         2       0       0       0       0
   329 ;;Total ram usage:        2 bytes
   330 ;; Hardware stack levels required when called:    2
   331 ;; This function calls:
   332 ;;		_ADC
   333 ;;		_ADC_INIT
   334 ;;		_ADC_INTERRUPT
   335 ;;		_CONFIG_IO
   336 ;;		_OSCILADOR
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _main
   344  07D0                     _main:
   345  07D0                     l771:	
   346                           ;incstack = 0
   347                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   348                           
   349                           
   350                           ;POT_ADC.c: 48:     CONFIG_IO();
   351  07D0  120A  118A  277F  120A  118A  	fcall	_CONFIG_IO
   352                           
   353                           ;POT_ADC.c: 49:     OSCILADOR();
   354  07D5  120A  118A  276F  120A  118A  	fcall	_OSCILADOR
   355  07DA                     l773:
   356                           
   357                           ;POT_ADC.c: 50:     ADC_INIT();
   358  07DA  120A  118A  276B  120A  118A  	fcall	_ADC_INIT
   359  07DF                     l775:
   360                           
   361                           ;POT_ADC.c: 51:     ADC_INTERRUPT();
   362  07DF  120A  118A  2774  120A  118A  	fcall	_ADC_INTERRUPT
   363  07E4                     l777:
   364                           
   365                           ;POT_ADC.c: 55:         ADC();
   366  07E4  120A  118A  27AC  120A  118A  	fcall	_ADC
   367  07E9                     l779:
   368                           
   369                           ;POT_ADC.c: 57:         _delay((unsigned long)((1)*(8000000/4000.0)));
   370  07E9  3003               	movlw	3
   371  07EA  00FB               	movwf	??_main+1
   372  07EB  3097               	movlw	151
   373  07EC  00FA               	movwf	??_main
   374  07ED                     u37:
   375  07ED  0BFA               	decfsz	??_main,f
   376  07EE  2FED               	goto	u37
   377  07EF  0BFB               	decfsz	??_main+1,f
   378  07F0  2FED               	goto	u37
   379  07F1  2FF2               	nop2
   380  07F2  2FE4               	goto	l777
   381  07F3  120A  118A  2800   	ljmp	start
   382  07F6                     __end_of_main:
   383                           
   384                           	psect	text1
   385  076F                     __ptext1:	
   386 ;; *************** function _OSCILADOR *****************
   387 ;; Defined at:
   388 ;;		line 80 in file "POT_ADC.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0
   405 ;;      Totals:         0       0       0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _OSCILADOR
   417  076F                     _OSCILADOR:
   418  076F                     l693:	
   419                           ;incstack = 0
   420                           ; Regs used in _OSCILADOR: [wreg]
   421                           
   422                           
   423                           ;POT_ADC.c: 81:     OSCCON = 0b01110001;
   424  076F  3071               	movlw	113
   425  0770  1683               	bsf	3,5	;RP0=1, select bank1
   426  0771  1303               	bcf	3,6	;RP1=0, select bank1
   427  0772  008F               	movwf	15	;volatile
   428  0773                     l74:
   429  0773  0008               	return
   430  0774                     __end_of_OSCILADOR:
   431                           
   432                           	psect	text2
   433  077F                     __ptext2:	
   434 ;; *************** function _CONFIG_IO *****************
   435 ;; Defined at:
   436 ;;		line 66 in file "POT_ADC.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _CONFIG_IO
   465  077F                     _CONFIG_IO:
   466  077F                     l687:	
   467                           ;incstack = 0
   468                           ; Regs used in _CONFIG_IO: [wreg+status,2]
   469                           
   470                           
   471                           ;POT_ADC.c: 67:     ANSEL = 0b00000001;
   472  077F  3001               	movlw	1
   473  0780  1683               	bsf	3,5	;RP0=1, select bank3
   474  0781  1703               	bsf	3,6	;RP1=1, select bank3
   475  0782  0088               	movwf	8	;volatile
   476  0783                     l689:
   477                           
   478                           ;POT_ADC.c: 68:     ANSELH = 0;
   479  0783  0189               	clrf	9	;volatile
   480  0784                     l691:
   481                           
   482                           ;POT_ADC.c: 69:     TRISA = 0b00000001;
   483  0784  3001               	movlw	1
   484  0785  1683               	bsf	3,5	;RP0=1, select bank1
   485  0786  1303               	bcf	3,6	;RP1=0, select bank1
   486  0787  0085               	movwf	5	;volatile
   487                           
   488                           ;POT_ADC.c: 70:     TRISB = 0;
   489  0788  0186               	clrf	6	;volatile
   490                           
   491                           ;POT_ADC.c: 71:     TRISD = 0;
   492  0789  0188               	clrf	8	;volatile
   493                           
   494                           ;POT_ADC.c: 72:     TRISE = 0;
   495  078A  0189               	clrf	9	;volatile
   496                           
   497                           ;POT_ADC.c: 74:     PORTA = 0;
   498  078B  1283               	bcf	3,5	;RP0=0, select bank0
   499  078C  1303               	bcf	3,6	;RP1=0, select bank0
   500  078D  0185               	clrf	5	;volatile
   501                           
   502                           ;POT_ADC.c: 75:     PORTB = 0;
   503  078E  0186               	clrf	6	;volatile
   504                           
   505                           ;POT_ADC.c: 76:     PORTC = 0;
   506  078F  0187               	clrf	7	;volatile
   507                           
   508                           ;POT_ADC.c: 77:     PORTD = 0;
   509  0790  0188               	clrf	8	;volatile
   510  0791                     l71:
   511  0791  0008               	return
   512  0792                     __end_of_CONFIG_IO:
   513                           
   514                           	psect	text3
   515  0774                     __ptext3:	
   516 ;; *************** function _ADC_INTERRUPT *****************
   517 ;; Defined at:
   518 ;;		line 85 in file "POT_ADC.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		status,2
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _ADC_INTERRUPT
   547  0774                     _ADC_INTERRUPT:
   548  0774                     l695:	
   549                           ;incstack = 0
   550                           ; Regs used in _ADC_INTERRUPT: [status,2]
   551                           
   552                           
   553                           ;POT_ADC.c: 86:     PIE1bits.ADIE = 0;
   554  0774  1683               	bsf	3,5	;RP0=1, select bank1
   555  0775  1303               	bcf	3,6	;RP1=0, select bank1
   556  0776  130C               	bcf	12,6	;volatile
   557                           
   558                           ;POT_ADC.c: 87:     PIR1bits.ADIF = 0;
   559  0777  1283               	bcf	3,5	;RP0=0, select bank0
   560  0778  1303               	bcf	3,6	;RP1=0, select bank0
   561  0779  130C               	bcf	12,6	;volatile
   562  077A                     l697:
   563                           
   564                           ;POT_ADC.c: 88:     OPTION_REG = 0b00000000;
   565  077A  1683               	bsf	3,5	;RP0=1, select bank1
   566  077B  1303               	bcf	3,6	;RP1=0, select bank1
   567  077C  0181               	clrf	1	;volatile
   568                           
   569                           ;POT_ADC.c: 89:     INTCON = 0b00000000;
   570  077D  018B               	clrf	11	;volatile
   571  077E                     l77:
   572  077E  0008               	return
   573  077F                     __end_of_ADC_INTERRUPT:
   574                           
   575                           	psect	text4
   576  076B                     __ptext4:	
   577 ;; *************** function _ADC_INIT *****************
   578 ;; Defined at:
   579 ;;		line 38 in file "./Lib_ADC.h"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		status,2
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _ADC_INIT
   608  076B                     _ADC_INIT:
   609  076B                     l685:	
   610                           ;incstack = 0
   611                           ; Regs used in _ADC_INIT: [status,2]
   612                           
   613                           
   614                           ;./Lib_ADC.h: 39:     ADCON1 = 0b00000000;
   615  076B  1683               	bsf	3,5	;RP0=1, select bank1
   616  076C  1303               	bcf	3,6	;RP1=0, select bank1
   617  076D  019F               	clrf	31	;volatile
   618  076E                     l56:
   619  076E  0008               	return
   620  076F                     __end_of_ADC_INIT:
   621                           
   622                           	psect	text5
   623  07AC                     __ptext5:	
   624 ;; *************** function _ADC *****************
   625 ;; Defined at:
   626 ;;		line 92 in file "POT_ADC.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          2       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    1
   647 ;; This function calls:
   648 ;;		_ADC_CHANNEL
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _ADC
   656  07AC                     _ADC:
   657  07AC                     l755:	
   658                           ;incstack = 0
   659                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   660                           
   661                           
   662                           ;POT_ADC.c: 93:     ADC_CHANNEL(0);
   663  07AC  3000               	movlw	0
   664  07AD  00F6               	movwf	ADC_CHANNEL@canal
   665  07AE  00F7               	movwf	ADC_CHANNEL@canal+1
   666  07AF  120A  118A  2792  120A  118A  	fcall	_ADC_CHANNEL
   667  07B4                     l757:
   668                           
   669                           ;POT_ADC.c: 95:     ADCON0bits.ADCS0 = 1;
   670  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   671  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   672  07B6  171F               	bsf	31,6	;volatile
   673  07B7                     l759:
   674                           
   675                           ;POT_ADC.c: 96:     ADCON0bits.ADCS1 = 0;
   676  07B7  139F               	bcf	31,7	;volatile
   677  07B8                     l761:
   678                           
   679                           ;POT_ADC.c: 97:     ADCON0bits.ADON = 1;
   680  07B8  141F               	bsf	31,0	;volatile
   681  07B9                     l763:
   682                           
   683                           ;POT_ADC.c: 98:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
   684  07B9  30A6               	movlw	166
   685  07BA  00F8               	movwf	??_ADC
   686  07BB                     u47:
   687  07BB  0BF8               	decfsz	??_ADC,f
   688  07BC  2FBB               	goto	u47
   689  07BD  0000               	nop
   690  07BE                     l765:
   691                           
   692                           ;POT_ADC.c: 99:     ADCON0bits.GO = 1;
   693  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   694  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   695  07C0  149F               	bsf	31,1	;volatile
   696                           
   697                           ;POT_ADC.c: 100:     while (ADCON0bits.GO == 1) {
   698  07C1  2FCB               	goto	l769
   699  07C2                     l767:
   700                           
   701                           ;POT_ADC.c: 101:         result_adc = ADRESH;
   702  07C2  081E               	movf	30,w	;volatile
   703  07C3  00F8               	movwf	??_ADC
   704  07C4  01F9               	clrf	??_ADC+1
   705  07C5  0878               	movf	??_ADC,w
   706  07C6  00F4               	movwf	_result_adc
   707  07C7  0879               	movf	??_ADC+1,w
   708  07C8  00F5               	movwf	_result_adc+1
   709                           
   710                           ;POT_ADC.c: 102:         PORTC = result_adc;
   711  07C9  0874               	movf	_result_adc,w
   712  07CA  0087               	movwf	7	;volatile
   713  07CB                     l769:
   714                           
   715                           ;POT_ADC.c: 100:     while (ADCON0bits.GO == 1) {
   716  07CB  189F               	btfsc	31,1	;volatile
   717  07CC  2FCE               	goto	u21
   718  07CD  2FCF               	goto	u20
   719  07CE                     u21:
   720  07CE  2FC2               	goto	l767
   721  07CF                     u20:
   722  07CF                     l83:
   723  07CF  0008               	return
   724  07D0                     __end_of_ADC:
   725                           
   726                           	psect	text6
   727  0792                     __ptext6:	
   728 ;; *************** function _ADC_CHANNEL *****************
   729 ;; Defined at:
   730 ;;		line 18 in file "./Lib_ADC.h"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  canal           2    0[COMMON] unsigned short 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  2    0[COMMON] unsigned int 
   737 ;; Registers used:
   738 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         2       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         2       0       0       0       0
   748 ;;Total ram usage:        2 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_ADC
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _ADC_CHANNEL
   759  0792                     _ADC_CHANNEL:
   760  0792                     l745:	
   761                           ;incstack = 0
   762                           ; Regs used in _ADC_CHANNEL: [wreg-fsr0h+status,2+status,0]
   763                           
   764                           
   765                           ;./Lib_ADC.h: 20:     switch (canal) {
   766  0792  2FA1               	goto	l749
   767  0793                     l50:	
   768                           ;./Lib_ADC.h: 21:         case 0:
   769                           
   770                           
   771                           ;./Lib_ADC.h: 22:             ADCON0bits.CHS3 = 0;
   772  0793  1283               	bcf	3,5	;RP0=0, select bank0
   773  0794  1303               	bcf	3,6	;RP1=0, select bank0
   774  0795  129F               	bcf	31,5	;volatile
   775                           
   776                           ;./Lib_ADC.h: 23:             ADCON0bits.CHS2 = 0;
   777  0796  121F               	bcf	31,4	;volatile
   778                           
   779                           ;./Lib_ADC.h: 24:             ADCON0bits.CHS1 = 0;
   780  0797  119F               	bcf	31,3	;volatile
   781                           
   782                           ;./Lib_ADC.h: 25:             ADCON0bits.CHS0 = 0;
   783  0798  111F               	bcf	31,2	;volatile
   784                           
   785                           ;./Lib_ADC.h: 27:             break;
   786  0799  2FAB               	goto	l53
   787  079A                     l52:	
   788                           ;./Lib_ADC.h: 29:         default:
   789                           
   790                           
   791                           ;./Lib_ADC.h: 30:             ADCON0bits.CHS3 = 0;
   792  079A  1283               	bcf	3,5	;RP0=0, select bank0
   793  079B  1303               	bcf	3,6	;RP1=0, select bank0
   794  079C  129F               	bcf	31,5	;volatile
   795                           
   796                           ;./Lib_ADC.h: 31:             ADCON0bits.CHS2 = 0;
   797  079D  121F               	bcf	31,4	;volatile
   798                           
   799                           ;./Lib_ADC.h: 32:             ADCON0bits.CHS1 = 0;
   800  079E  119F               	bcf	31,3	;volatile
   801                           
   802                           ;./Lib_ADC.h: 33:             ADCON0bits.CHS0 = 0;
   803  079F  111F               	bcf	31,2	;volatile
   804                           
   805                           ;./Lib_ADC.h: 34:             break;
   806  07A0  2FAB               	goto	l53
   807  07A1                     l749:
   808                           
   809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   810                           ; Switch size 1, requested type "simple"
   811                           ; Number of cases is 1, Range of values is 0 to 0
   812                           ; switch strategies available:
   813                           ; Name         Instructions Cycles
   814                           ; simple_byte            4     3 (average)
   815                           ; direct_byte           11     8 (fixed)
   816                           ; jumptable            260     6 (fixed)
   817                           ;	Chosen strategy is simple_byte
   818  07A1  0877               	movf	ADC_CHANNEL@canal+1,w
   819  07A2  3A00               	xorlw	0	; case 0
   820  07A3  1903               	skipnz
   821  07A4  2FA6               	goto	l801
   822  07A5  2F9A               	goto	l52
   823  07A6                     l801:
   824                           
   825                           ; Switch size 1, requested type "simple"
   826                           ; Number of cases is 1, Range of values is 0 to 0
   827                           ; switch strategies available:
   828                           ; Name         Instructions Cycles
   829                           ; simple_byte            4     3 (average)
   830                           ; direct_byte           11     8 (fixed)
   831                           ; jumptable            260     6 (fixed)
   832                           ;	Chosen strategy is simple_byte
   833  07A6  0876               	movf	ADC_CHANNEL@canal,w
   834  07A7  3A00               	xorlw	0	; case 0
   835  07A8  1903               	skipnz
   836  07A9  2F93               	goto	l50
   837  07AA  2F9A               	goto	l52
   838  07AB                     l53:
   839  07AB  0008               	return
   840  07AC                     __end_of_ADC_CHANNEL:
   841  007E                     btemp	set	126	;btemp
   842  007E                     wtemp0	set	126
   843                           
   844                           	psect	config
   845                           
   846                           ;Config register CONFIG1 @ 0x2007
   847                           ;	Oscillator Selection bits
   848                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   849                           ;	Watchdog Timer Enable bit
   850                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   851                           ;	Power-up Timer Enable bit
   852                           ;	PWRTE = OFF, PWRT disabled
   853                           ;	RE3/MCLR pin function select bit
   854                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   855                           ;	Code Protection bit
   856                           ;	CP = OFF, Program memory code protection is disabled
   857                           ;	Data Code Protection bit
   858                           ;	CPD = OFF, Data memory code protection is disabled
   859                           ;	Brown Out Reset Selection bits
   860                           ;	BOREN = OFF, BOR disabled
   861                           ;	Internal External Switchover bit
   862                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   863                           ;	Fail-Safe Clock Monitor Enabled bit
   864                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   865                           ;	Low Voltage Programming Enable bit
   866                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   867                           ;	In-Circuit Debugger Mode bit
   868                           ;	DEBUG = 0x1, unprogrammed default
   869  2007                     	org	8199
   870  2007  20D1               	dw	8401
   871                           
   872                           ;Config register CONFIG2 @ 0x2008
   873                           ;	Brown-out Reset Selection bit
   874                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   875                           ;	Flash Program Memory Self Write Enable bits
   876                           ;	WRT = OFF, Write protection off
   877  2008                     	org	8200
   878  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC
    _ADC->_ADC_CHANNEL

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      98
                                              4 COMMON     2     2      0
                                _ADC
                           _ADC_INIT
                      _ADC_INTERRUPT
                          _CONFIG_IO
                          _OSCILADOR
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INTERRUPT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0      98
                                              2 COMMON     2     2      0
                        _ADC_CHANNEL
 ---------------------------------------------------------------------------------
 (2) _ADC_CHANNEL                                          2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _ADC_CHANNEL
   _ADC_INIT
   _ADC_INTERRUPT
   _CONFIG_IO
   _OSCILADOR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 11:54:04 2021

                     l50 0793                       l52 079A                       l53 07AB  
                     l71 0791                       l56 076E                       l74 0773  
                     l83 07CF                       l77 077E                       u20 07CF  
                     u21 07CE                       u37 07ED                       u47 07BB  
                    _ADC 07AC                      l801 07A6                      l745 0792  
                    l761 07B8                      l763 07B9                      l755 07AC  
                    l691 0784                      l771 07D0                      l749 07A1  
                    l765 07BE                      l757 07B4                      l685 076B  
                    l693 076F                      l773 07DA                      l767 07C2  
                    l759 07B7                      l695 0774                      l687 077F  
                    l775 07DF                      l769 07CB                      l697 077A  
                    l689 0783                      l777 07E4                      l779 07E9  
     __size_of_CONFIG_IO 0013                     ?_ADC 0076   __size_of_ADC_INTERRUPT 000B  
       __end_of_ADC_INIT 076F                     _main 07D0                     btemp 007E  
                   _volt 0070                     start 0000                    ??_ADC 0078  
     __size_of_OSCILADOR 0005                    ?_main 0076                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    status 0003  
                  wtemp0 007E          __initialization 07F6        __end_of_CONFIG_IO 0792  
           __end_of_main 07F6            _ADC_INTERRUPT 0774                   ??_main 007A  
                 _ADCON1 009F                   _ADRESH 001E                   _ANSELH 0189  
                 _INTCON 000B        __end_of_OSCILADOR 0774                   _OSCCON 008F  
         ?_ADC_INTERRUPT 0076                ?_ADC_INIT 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0076               ??_ADC_INIT 0076            ??_ADC_CHANNEL 0078  
             __pmaintext 07D0          ??_ADC_INTERRUPT 0076      __end_of_ADC_CHANNEL 07AC  
              _CONFIG_IO 077F                  __ptext1 076F                  __ptext2 077F  
                __ptext3 0774                  __ptext4 076B                  __ptext5 07AC  
                __ptext6 0792             __size_of_ADC 0024     end_of_initialization 07FC  
              _OSCILADOR 076F               _result_adc 0074               ?_CONFIG_IO 0076  
      __size_of_ADC_INIT 0004              _ADC_CHANNEL 0792               ?_OSCILADOR 0076  
    start_initialization 07F6              __end_of_ADC 07D0              ??_CONFIG_IO 0076  
            __pbssCOMMON 0070                ___latbits 0002         ADC_CHANNEL@canal 0076  
            ??_OSCILADOR 0076    __end_of_ADC_INTERRUPT 077F                 _ADC_INIT 076B  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
           ?_ADC_CHANNEL 0076            __size_of_main 0026               _OPTION_REG 0081  
   __size_of_ADC_CHANNEL 001A  
